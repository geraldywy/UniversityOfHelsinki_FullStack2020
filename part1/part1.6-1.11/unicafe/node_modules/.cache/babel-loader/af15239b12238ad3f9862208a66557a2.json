{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gerald\\\\Desktop\\\\UoHFullStack2020\\\\part1\\\\part1.6-1.11\\\\unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"give feedback\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setGood(good + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"good\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setNeutral(neutral + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setBad(bad + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"bad\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"statistics\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"good \", good), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"neutral \", neutral, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"bad \", bad, \" \"), /*#__PURE__*/React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst Statistics = props => {\n  if (props.good + props.neutral + props.bad != 0) {\n    return;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, \"all \", good + neutral + bad, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, \"average \", (good - bad) / (good + neutral + bad), \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, \"positive \", good / (good + neutral + bad), \" \"));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Gerald/Desktop/UoHFullStack2020/part1/part1.6-1.11/unicafe/src/index.js"],"names":["React","useState","ReactDOM","App","good","setGood","neutral","setNeutral","bad","setBad","Statistics","props","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,CAAD,CAA9B;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAII,OAAO,CAACD,IAAI,GAAC,CAAN,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAQ,IAAA,OAAO,EAAE,MAAIG,UAAU,CAACD,OAAO,GAAC,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,eAQE;AAAQ,IAAA,OAAO,EAAE,MAAIG,MAAM,CAACD,GAAG,GAAC,CAAL,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAASJ,IAAT,CAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYE,OAAZ,MAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQE,GAAR,MAdF,eAeE,oBAAC,UAAD;AAAa,IAAA,IAAI,EAAEJ,IAAnB;AAAyB,IAAA,OAAO,EAAEE,OAAlC;AAA2C,IAAA,GAAG,EAAEE,GAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAmBD,CAzBD;;AA2BA,MAAME,UAAU,GAAIC,KAAD,IAAW;AAC5B,MAAIA,KAAK,CAACP,IAAN,GAAWO,KAAK,CAACL,OAAjB,GAAyBK,KAAK,CAACH,GAA/B,IAAoC,CAAxC,EAA0C;AACxC;AACD;;AACD,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQJ,IAAI,GAACE,OAAL,GAAaE,GAArB,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAY,CAACJ,IAAI,GAACI,GAAN,KAAYJ,IAAI,GAACE,OAAL,GAAaE,GAAzB,CAAZ,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaJ,IAAI,IAAEA,IAAI,GAACE,OAAL,GAAaE,GAAf,CAAjB,MAHF,CADA;AAOD,CAXD;;AAaAN,QAAQ,CAACU,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <button onClick={()=>setGood(good+1)}>\n        good\n      </button>\n      <button onClick={()=>setNeutral(neutral+1)}>\n        neutral\n      </button>\n      <button onClick={()=>setBad(bad+1)}>\n        bad\n      </button>\n      <h1>statistics</h1>\n      <p>good {good}</p>\n      <p>neutral {neutral} </p>\n      <p>bad {bad} </p>\n      <Statistics  good={good} neutral={neutral} bad={bad} />\n    </div>\n  )\n}\n\nconst Statistics = (props) => {\n  if (props.good+props.neutral+props.bad!=0){\n    return\n  }\n  return(\n  <div>\n    <p>all {good+neutral+bad} </p>\n    <p>average {(good-bad)/(good+neutral+bad)} </p>\n    <p>positive {good/(good+neutral+bad)} </p>\n  </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}