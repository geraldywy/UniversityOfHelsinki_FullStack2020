{"ast":null,"code":"import axios from 'axios';\nconst base_url = 'http://localhost:3001/persons';\n\nconst getAll = () => axios.get(base_url).then(response => response.data);\n\nconst addNew = ({\n  number,\n  name\n}) => {\n  return axios.post(base_url, {\n    name: name,\n    number: number\n  }).then(response => response.data);\n};\n\nconst deleteEntry = ({\n  name,\n  number\n}) => {\n  if (name !== '' && number !== '') return axios.delete(base_url, {\n    name: name,\n    number: number\n  }).then(response => response.data);else console.log('empty entry');\n};\n\nexport default {\n  getAll,\n  addNew,\n  deleteEntry\n};","map":{"version":3,"sources":["C:/Users/Gerald/Desktop/UoHFullStack2020/part2/part2.6-2.11_2.15-2.18/thephonebook/src/services/persons.js"],"names":["axios","base_url","getAll","get","then","response","data","addNew","number","name","post","deleteEntry","delete","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,QAAQ,GAAG,+BAAjB;;AAEA,MAAMC,MAAM,GAAG,MACXF,KAAK,CACJG,GADD,CACKF,QADL,EAECG,IAFD,CAGIC,QAAQ,IAAIA,QAAQ,CAACC,IAHzB,CADJ;;AAOA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAAmB;AAC9B,SACIT,KAAK,CACRU,IADG,CACET,QADF,EACY;AAACQ,IAAAA,IAAI,EAAEA,IAAP;AAAaD,IAAAA,MAAM,EAAEA;AAArB,GADZ,EAEHJ,IAFG,CAEEC,QAAQ,IAAEA,QAAQ,CAACC,IAFrB,CADJ;AAKH,CAND;;AAQA,MAAMK,WAAW,GAAG,CAAC;AAACF,EAAAA,IAAD;AAAOD,EAAAA;AAAP,CAAD,KAAoB;AACpC,MAAIC,IAAI,KAAG,EAAP,IAAaD,MAAM,KAAG,EAA1B,EACI,OACIR,KAAK,CACJY,MADD,CACQX,QADR,EACkB;AAACQ,IAAAA,IAAI,EAACA,IAAN;AAAYD,IAAAA,MAAM,EAACA;AAAnB,GADlB,EAECJ,IAFD,CAEMC,QAAQ,IAAIA,QAAQ,CAACC,IAF3B,CADJ,CADJ,KAOIO,OAAO,CAACC,GAAR,CAAY,aAAZ;AACP,CATD;;AAaA,eAAe;AAACZ,EAAAA,MAAD;AAASK,EAAAA,MAAT;AAAiBI,EAAAA;AAAjB,CAAf","sourcesContent":["import axios from 'axios'\r\n\r\n\r\nconst base_url = 'http://localhost:3001/persons'\r\n\r\nconst getAll = () =>\r\n    axios\r\n    .get(base_url)\r\n    .then(\r\n        response => response.data\r\n    )\r\n\r\nconst addNew = ({number, name}) =>{\r\n    return(\r\n        axios\r\n    .post(base_url, {name: name, number: number})\r\n    .then(response=>response.data)\r\n    )\r\n}\r\n\r\nconst deleteEntry = ({name, number}) => {\r\n    if (name!=='' && number!=='')\r\n        return(\r\n            axios\r\n            .delete(base_url, {name:name, number:number})\r\n            .then(response => response.data)\r\n        )\r\n    else\r\n        console.log('empty entry')\r\n}\r\n    \r\n\r\n\r\nexport default {getAll, addNew, deleteEntry}"]},"metadata":{},"sourceType":"module"}