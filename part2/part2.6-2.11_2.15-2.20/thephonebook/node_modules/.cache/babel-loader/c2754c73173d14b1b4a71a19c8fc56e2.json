{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gerald\\\\Desktop\\\\UoHFullStack2020\\\\part2\\\\part2.6-2.11_2.15-2.18\\\\thephonebook\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\nimport personsService from './services/persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setNewFilter] = useState('');\n  const [newNotification, setNewNotification] = useState('');\n  const [newSuccess, setNewSuccess] = useState(null);\n  useEffect(() => {\n    personsService.getAll().then(response => setPersons(response));\n  }, []);\n\n  const handleNameChange = event => setNewName(event.target.value);\n\n  const handleNumberChange = event => setNewNumber(event.target.value);\n\n  const handleFilterChange = event => setNewFilter(event.target.value);\n\n  const personsToShow = newFilter ? persons.filter(person => person.name.toLowerCase().includes(newFilter)) : persons;\n\n  const handleUpdate = ({\n    person_to_replace\n  }) => {\n    personsService.update({\n      person: person_to_replace\n    }).then(response => setPersons(persons.map(person => person.name === person_to_replace.name ? person_to_replace : person))).catch(error => {\n      console.log('error');\n      handleNotification({\n        Notification: `${person_to_replace} does not exist anymore in the phonebook`,\n        success: false\n      });\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const person_to_replace = persons.find(person => person.name === newName);\n    console.log(person_to_replace);\n\n    if (typeof person_to_replace !== 'undefined' && person_to_replace.number !== newNumber) {\n      if (window.confirm(`${person_to_replace.name} is already added to phonebook, replace the old number with a new one?`)) {\n        person_to_replace.number = newNumber;\n        console.log(person_to_replace);\n        handleUpdate({\n          person_to_replace\n        });\n        handleNotification({\n          Notification: `Updated ${person_to_replace.name}'s number`,\n          success: true\n        });\n      }\n    } else if (persons.map(person => person.number).includes(newNumber)) {\n      const person_using_number = persons.find(person => person.number === newNumber);\n      handleNotification({\n        Notification: `The number: ${newNumber} is already registered under ${person_using_number.name}`,\n        success: false\n      });\n    } else {\n      personsService.addNew({\n        name: newName,\n        number: newNumber\n      }).then(response => setPersons(persons.concat(response)));\n      handleNotification({\n        Notification: `Added ${newName} successfully`,\n        success: true\n      });\n    }\n\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const handleDelete = ({\n    id,\n    name,\n    number\n  }) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      personsService.deleteEntry(id).catch(error => {\n        console.log('error');\n        handleNotification({\n          Notification: `${name} does not exist anymore in the phonebook`,\n          success: false\n        });\n      });\n      setPersons(persons.filter(person => person.name !== name && person.number !== number));\n      console.log('deleted', name);\n      handleNotification({\n        Notification: `Deleted ${name} successfully`,\n        success: true\n      });\n    }\n  };\n\n  const handleNotification = ({\n    Notification,\n    success\n  }) => {\n    setNewNotification(Notification);\n    setNewSuccess(success);\n    setTimeout(() => {\n      setNewNotification('');\n      setNewSuccess(null);\n    }, 5000);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(Notification, {\n    newNotification: newNotification,\n    success: newSuccess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Filter, {\n    newFilter: newFilter,\n    handleFilterChange: handleFilterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \"add a new\"), /*#__PURE__*/React.createElement(PersonForm, {\n    newName: newName,\n    handleNameChange: handleNameChange,\n    newNumber: newNumber,\n    handleNumberChange: handleNumberChange,\n    handleSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, \"Numbers\"), /*#__PURE__*/React.createElement(Persons, {\n    personsToShow: personsToShow,\n    handleDelete: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Gerald/Desktop/UoHFullStack2020/part2/part2.6-2.11_2.15-2.18/thephonebook/src/App.js"],"names":["React","useState","useEffect","Filter","PersonForm","Persons","Notification","personsService","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","newNotification","setNewNotification","newSuccess","setNewSuccess","getAll","then","response","handleNameChange","event","target","value","handleNumberChange","handleFilterChange","personsToShow","filter","person","name","toLowerCase","includes","handleUpdate","person_to_replace","update","map","catch","error","console","log","handleNotification","success","handleSubmit","preventDefault","find","number","window","confirm","person_using_number","addNew","concat","handleDelete","id","deleteEntry","setTimeout"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAEU,OAAF,EAAWC,UAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAEY,SAAF,EAAaC,YAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAEc,SAAF,EAAaC,YAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAEgB,eAAF,EAAmBC,kBAAnB,IAA0CjB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAAEkB,UAAF,EAAcC,aAAd,IAAgCnB,QAAQ,CAAC,IAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,cAAc,CACbc,MADD,GAECC,IAFD,CAEMC,QAAQ,IAAIb,UAAU,CAACa,QAAD,CAF5B;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,gBAAgB,GAAIC,KAAD,IAAWb,UAAU,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA9C;;AACA,QAAMC,kBAAkB,GAAIH,KAAD,IAAWX,YAAY,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlD;;AACA,QAAME,kBAAkB,GAAIJ,KAAD,IAAWT,YAAY,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlD;;AACA,QAAMG,aAAa,GAAGf,SAAS,GAAGN,OAAO,CAACsB,MAAR,CAAeC,MAAM,IAAEA,MAAM,CAACC,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmCpB,SAAnC,CAAvB,CAAH,GAA2EN,OAA1G;;AAEA,QAAM2B,YAAY,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAwB;AAC3C9B,IAAAA,cAAc,CACb+B,MADD,CACQ;AAACN,MAAAA,MAAM,EAACK;AAAR,KADR,EAECf,IAFD,CAGEC,QAAQ,IAAEb,UAAU,CAACD,OAAO,CAAC8B,GAAR,CAAYP,MAAM,IAAEA,MAAM,CAACC,IAAP,KAAcI,iBAAiB,CAACJ,IAAhC,GAAuCI,iBAAvC,GAA0DL,MAA9E,CAAD,CAHtB,EAIEQ,KAJF,CAKEC,KAAK,IAAE;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAC,MAAAA,kBAAkB,CAAC;AAACtC,QAAAA,YAAY,EAAE,GAAE+B,iBAAkB,0CAAnC;AAA8EQ,QAAAA,OAAO,EAAC;AAAtF,OAAD,CAAlB;AACD,KARH;AAUD,GAXD;;AAaA,QAAMC,YAAY,GAAIrB,KAAD,IAAS;AAC5BA,IAAAA,KAAK,CAACsB,cAAN;AACA,UAAMV,iBAAiB,GAAG5B,OAAO,CAACuC,IAAR,CAAchB,MAAD,IAAUA,MAAM,CAACC,IAAP,KAActB,OAArC,CAA1B;AAEA+B,IAAAA,OAAO,CAACC,GAAR,CAAYN,iBAAZ;;AACA,QAAI,OAAOA,iBAAP,KAA6B,WAA7B,IAA4CA,iBAAiB,CAACY,MAAlB,KAA2BpC,SAA3E,EAAqF;AACnF,UAAIqC,MAAM,CAACC,OAAP,CAAgB,GAAEd,iBAAiB,CAACJ,IAAK,wEAAzC,CAAJ,EAAuH;AACrHI,QAAAA,iBAAiB,CAACY,MAAlB,GAAyBpC,SAAzB;AACA6B,QAAAA,OAAO,CAACC,GAAR,CAAYN,iBAAZ;AACAD,QAAAA,YAAY,CAAC;AAACC,UAAAA;AAAD,SAAD,CAAZ;AACAO,QAAAA,kBAAkB,CAAC;AAACtC,UAAAA,YAAY,EAAE,WAAU+B,iBAAiB,CAACJ,IAAK,WAAhD;AAA4DY,UAAAA,OAAO,EAAC;AAApE,SAAD,CAAlB;AACD;AACF,KAPD,MAQK,IAAIpC,OAAO,CAAC8B,GAAR,CAAaP,MAAD,IAAUA,MAAM,CAACiB,MAA7B,EAAqCd,QAArC,CAA8CtB,SAA9C,CAAJ,EAA6D;AAChE,YAAMuC,mBAAmB,GAAG3C,OAAO,CAACuC,IAAR,CAAchB,MAAD,IAAUA,MAAM,CAACiB,MAAP,KAAgBpC,SAAvC,CAA5B;AACA+B,MAAAA,kBAAkB,CAAC;AAACtC,QAAAA,YAAY,EAAE,eAAcO,SAAU,gCAA+BuC,mBAAmB,CAACnB,IAAK,EAA/F;AAAkGY,QAAAA,OAAO,EAAC;AAA1G,OAAD,CAAlB;AACD,KAHI,MAID;AACFtC,MAAAA,cAAc,CACb8C,MADD,CACQ;AAACpB,QAAAA,IAAI,EAACtB,OAAN;AAAesC,QAAAA,MAAM,EAACpC;AAAtB,OADR,EAECS,IAFD,CAEMC,QAAQ,IACZb,UAAU,CAACD,OAAO,CAAC6C,MAAR,CAAe/B,QAAf,CAAD,CAHZ;AAKAqB,MAAAA,kBAAkB,CAAC;AAACtC,QAAAA,YAAY,EAAE,SAAQK,OAAQ,eAA/B;AAA+CkC,QAAAA,OAAO,EAAC;AAAvD,OAAD,CAAlB;AACD;;AACDjC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GA3BD;;AA6BA,QAAMyC,YAAY,GAAG,CAAC;AAACC,IAAAA,EAAD;AAAKvB,IAAAA,IAAL;AAAYgB,IAAAA;AAAZ,GAAD,KAAwB;AAC3C,QAAIC,MAAM,CAACC,OAAP,CAAgB,UAASlB,IAAK,GAA9B,CAAJ,EAAuC;AACrC1B,MAAAA,cAAc,CACbkD,WADD,CACaD,EADb,EACiBhB,KADjB,CAEEC,KAAK,IAAE;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAC,QAAAA,kBAAkB,CAAC;AAACtC,UAAAA,YAAY,EAAE,GAAE2B,IAAK,0CAAtB;AAAiEY,UAAAA,OAAO,EAAC;AAAzE,SAAD,CAAlB;AACD,OALH;AAOAnC,MAAAA,UAAU,CAACD,OAAO,CAACsB,MAAR,CAAeC,MAAM,IAAGA,MAAM,CAACC,IAAP,KAAcA,IAAd,IAAsBD,MAAM,CAACiB,MAAP,KAAgBA,MAA9D,CAAD,CAAV;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBV,IAAvB;AACAW,MAAAA,kBAAkB,CAAC;AAACtC,QAAAA,YAAY,EAAE,WAAU2B,IAAK,eAA9B;AAA8CY,QAAAA,OAAO,EAAC;AAAtD,OAAD,CAAlB;AACD;AACF,GAbD;;AAeA,QAAMD,kBAAkB,GAAG,CAAC;AAACtC,IAAAA,YAAD;AAAeuC,IAAAA;AAAf,GAAD,KAA4B;AACnD3B,IAAAA,kBAAkB,CAACZ,YAAD,CAAlB;AACAc,IAAAA,aAAa,CAACyB,OAAD,CAAb;AACAa,IAAAA,UAAU,CAAC,MAAM;AACfxC,MAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAE,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAHS,EAGP,IAHO,CAAV;AAIH,GAPD;;AASA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEI,oBAAC,YAAD;AAAc,IAAA,eAAe,EAAEH,eAA/B;AAAgD,IAAA,OAAO,EAAEE,UAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEJ,SAAnB;AAA8B,IAAA,kBAAkB,EAAEc,kBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,eAKE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAElB,OAArB;AAA8B,IAAA,gBAAgB,EAAEa,gBAAhD;AACA,IAAA,SAAS,EAAEX,SADX;AACsB,IAAA,kBAAkB,EAAEe,kBAD1C;AAEA,IAAA,YAAY,EAAEkB,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,eAUE,oBAAC,OAAD;AAAS,IAAA,aAAa,EAAEhB,aAAxB;AAAuC,IAAA,YAAY,EAAEyB,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD,CAnGD;;AAqGA,eAAe/C,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personsService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ newNotification, setNewNotification ] = useState('')\n  const [ newSuccess, setNewSuccess ] = useState(null)\n\n  useEffect(() => {\n    personsService\n    .getAll()\n    .then(response => setPersons(response))\n  }, [])\n\n  const handleNameChange = (event) => setNewName(event.target.value)  \n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setNewFilter(event.target.value)\n  const personsToShow = newFilter ? persons.filter(person=>person.name.toLowerCase().includes(newFilter)) : persons\n  \n  const handleUpdate = ({person_to_replace}) =>{\n    personsService\n    .update({person:person_to_replace})\n    .then(\n      response=>setPersons(persons.map(person=>person.name===person_to_replace.name ? person_to_replace: person))\n    ).catch(\n      error=>{\n        console.log('error')\n        handleNotification({Notification:`${person_to_replace} does not exist anymore in the phonebook`, success:false})\n      }\n    )\n  }\n  \n  const handleSubmit = (event)=>{\n    event.preventDefault()\n    const person_to_replace = persons.find((person)=>person.name===newName)\n    \n    console.log(person_to_replace)\n    if (typeof person_to_replace !== 'undefined' && person_to_replace.number!==newNumber){\n      if (window.confirm(`${person_to_replace.name} is already added to phonebook, replace the old number with a new one?`)) { \n        person_to_replace.number=newNumber\n        console.log(person_to_replace)\n        handleUpdate({person_to_replace})\n        handleNotification({Notification:`Updated ${person_to_replace.name}'s number`, success:true})\n      }\n    }\n    else if (persons.map((person)=>person.number).includes(newNumber)){\n      const person_using_number = persons.find((person)=>person.number===newNumber)\n      handleNotification({Notification:`The number: ${newNumber} is already registered under ${person_using_number.name}`, success:false})\n    }\n    else{\n      personsService\n      .addNew({name:newName, number:newNumber})\n      .then(response=>\n        setPersons(persons.concat(response))\n      )\n      handleNotification({Notification:`Added ${newName} successfully`, success:true})\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleDelete = ({id ,name , number}) =>{\n    if (window.confirm(`Delete ${name}?`)) { \n      personsService\n      .deleteEntry(id).catch(\n        error=>{\n          console.log('error')\n          handleNotification({Notification:`${name} does not exist anymore in the phonebook`, success:false})\n        }\n      )\n      setPersons(persons.filter(person=>(person.name!==name && person.number!==number)))\n      console.log('deleted', name)\n      handleNotification({Notification:`Deleted ${name} successfully`, success:true})\n    }\n  }\n\n  const handleNotification = ({Notification, success}) =>{\n      setNewNotification(Notification)\n      setNewSuccess(success)\n      setTimeout(() => {\n        setNewNotification('')\n        setNewSuccess(null)\n      }, 5000)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <Notification newNotification={newNotification} success={newSuccess}/>\n        <Filter newFilter={newFilter} handleFilterChange={handleFilterChange}/>\n      <h2>add a new</h2>\n      <PersonForm newName={newName} handleNameChange={handleNameChange} \n      newNumber={newNumber} handleNumberChange={handleNumberChange} \n      handleSubmit={handleSubmit}\n      />\n      <h2>Numbers</h2>\n      <Persons personsToShow={personsToShow} handleDelete={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}