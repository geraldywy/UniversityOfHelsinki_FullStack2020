{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gerald\\\\Desktop\\\\UoHFullStack2020\\\\part2\\\\part2.12-2.14\\\\dataforcountries\\\\src\\\\components\\\\Display.js\";\nimport React, { useState } from 'react';\n\nconst Display = ({\n  countries,\n  newFilter,\n  setNewFilter\n}) => {\n  const countriesToShow = countries.filter(country => country.name.toLowerCase().includes(newFilter.toLowerCase()));\n  const api_key = process.env.REACT_APP_WEATHER_API_KEY;\n  const [weather, setNewWeather] = useState('');\n\n  const handleClick = countryName => {\n    setNewFilter(countryName);\n  };\n\n  if (countriesToShow.length === 1) {\n    const country = countriesToShow[0];\n    console.log(api_key);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, country.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, \"captial \", country.capital), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, \"population \", country.population), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, \"languages\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, country.languages.map((lang, i) => /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 55\n      }\n    }, lang.name))), /*#__PURE__*/React.createElement(\"img\", {\n      src: country.flag,\n      width: \"250\",\n      height: \"250\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, \"Weather in \", country.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, \"temperature:\"));\n  } else if (countriesToShow.length > 10) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Too many matches, specify another filter\");else // 1<length<=10\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, countriesToShow.map((country, i) => /*#__PURE__*/React.createElement(\"p\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, country.name, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => handleClick(country.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, \"show more\"))));\n};\n\nexport default Display;","map":{"version":3,"sources":["C:/Users/Gerald/Desktop/UoHFullStack2020/part2/part2.12-2.14/dataforcountries/src/components/Display.js"],"names":["React","useState","Display","countries","newFilter","setNewFilter","countriesToShow","filter","country","name","toLowerCase","includes","api_key","process","env","REACT_APP_WEATHER_API_KEY","weather","setNewWeather","handleClick","countryName","length","console","log","capital","population","languages","map","lang","i","flag"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA;AAAvB,CAAD,KAAyC;AACrD,QAAMC,eAAe,GAAGH,SAAS,CAACI,MAAV,CAAkBC,OAAD,IAAWA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCP,SAAS,CAACM,WAAV,EAApC,CAA5B,CAAxB;AACA,QAAME,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAA5B;AAEA,QAAM,CAACC,OAAD,EAAUC,aAAV,IAA2BhB,QAAQ,CAAC,EAAD,CAAzC;;AAEA,QAAMiB,WAAW,GAAIC,WAAD,IAAgB;AAChCd,IAAAA,YAAY,CAACc,WAAD,CAAZ;AACH,GAFD;;AAIA,MAAIb,eAAe,CAACc,MAAhB,KAA2B,CAA/B,EAAiC;AAC7B,UAAMZ,OAAO,GAAGF,eAAe,CAAC,CAAD,CAA/B;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,OAAO,CAACC,IAAb,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaD,OAAO,CAACe,OADrB,CAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACgBf,OAAO,CAACgB,UADxB,CALJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKhB,OAAO,CAACiB,SAAR,CAAkBC,GAAlB,CAAsB,CAACC,IAAD,EAAOC,CAAP,kBAAW;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaD,IAAI,CAAClB,IAAlB,CAAjC,CADL,CATJ,eAYI;AAAK,MAAA,GAAG,EAAED,OAAO,CAACqB,IAAlB;AAAwB,MAAA,KAAK,EAAC,KAA9B;AAAoC,MAAA,MAAM,EAAC,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgBrB,OAAO,CAACC,IAAxB,CAbJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAdJ,CADJ;AAkBH,GArBD,MAsBK,IAAIH,eAAe,CAACc,MAAhB,GAAuB,EAA3B,EACD,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADJ,CADC,KAMA;AACD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKd,eAAe,CAACoB,GAAhB,CAAoB,CAAClB,OAAD,EAAUoB,CAAV,kBACjB;AAAG,MAAA,GAAG,EAAEA,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKpB,OAAO,CAACC,IADb,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAKS,WAAW,CAACV,OAAO,CAACC,IAAT,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CADH,CADL,CADJ;AAcP,CArDD;;AAuDA,eAAeP,OAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Display = ({countries, newFilter, setNewFilter}) =>{\r\n    const countriesToShow = countries.filter((country)=>country.name.toLowerCase().includes(newFilter.toLowerCase()))\r\n    const api_key = process.env.REACT_APP_WEATHER_API_KEY\r\n\r\n    const [weather, setNewWeather] = useState('')\r\n\r\n    const handleClick = (countryName) =>{\r\n        setNewFilter(countryName)\r\n    }\r\n\r\n    if (countriesToShow.length === 1){\r\n        const country = countriesToShow[0]\r\n        console.log(api_key)\r\n        return (\r\n            <div>\r\n                <h2>{country.name}</h2>\r\n                <p>\r\n                    captial {country.capital}\r\n                </p>\r\n                <p>\r\n                    population {country.population}\r\n                </p>\r\n                <h3>languages</h3>\r\n                <ul>\r\n                    {country.languages.map((lang, i)=><li key={i}>{lang.name}</li>)}\r\n                </ul>\r\n                <img src={country.flag} width=\"250\" height=\"250\"/>\r\n                <h3>Weather in {country.name}</h3>\r\n                <p>temperature:</p>\r\n            </div>\r\n        )\r\n    }\r\n    else if (countriesToShow.length>10)\r\n        return (\r\n            <div>\r\n                Too many matches, specify another filter\r\n            </div>\r\n        )\r\n    else // 1<length<=10\r\n        return(\r\n            <div>\r\n                {countriesToShow.map((country, i)=>\r\n                    <p key={i}> \r\n                        {country.name} \r\n                        <button onClick={()=> handleClick(country.name)}>\r\n                            show more\r\n                        </button>\r\n                    </p>\r\n                    )\r\n                }\r\n               \r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Display"]},"metadata":{},"sourceType":"module"}